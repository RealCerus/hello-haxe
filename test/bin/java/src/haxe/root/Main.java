// Generated by Haxe 4.0.5
package haxe.root;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Main extends haxe.lang.HxObject
{
	public static void main(String[] args)
	{
		haxe.java.Init.init();
		{
			//line 1 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\?"
			haxe.root.Main.main();
		}
	}
	
	public Main(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Main()
	{
		//line 3 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		haxe.root.Main.__hx_ctor__Main(this);
	}
	
	
	protected static void __hx_ctor__Main(haxe.root.Main __hx_this)
	{
	}
	
	
	public static void main()
	{
		//line 5 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		haxe.Log.trace.__hx_invoke2_o(0.0, "Hello, world!", 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "main"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (5) )) )}));
		//line 7 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		haxe.root.Main.makeBreak("Funcs with optional params");
		//line 10 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		haxe.Log.trace.__hx_invoke2_o(0.0, ((haxe.lang.Function) (new haxe.lang.Closure(haxe.root.Main.class, "test")) ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "main"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (10) )) )}));
		//line 11 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		java.lang.Object i = null;
		//line 11 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		java.lang.String s = null;
		//line 11 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		haxe.Log.trace.__hx_invoke2_o(0.0, ( ( ( haxe.lang.Runtime.toString("i: ") + haxe.lang.Runtime.toString(i) ) + ", s: " ) + s ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "main"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (11) )) )}));
		//line 12 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		java.lang.String s1 = null;
		//line 12 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		haxe.Log.trace.__hx_invoke2_o(0.0, ( ( ( "i: " + 1 ) + ", s: " ) + s1 ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "main"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (12) )) )}));
		//line 13 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		haxe.Log.trace.__hx_invoke2_o(0.0, ( ( ( "i: " + 1 ) + ", s: " ) + "foo" ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "main"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (13) )) )}));
		//line 14 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		java.lang.Object i1 = null;
		//line 14 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		haxe.Log.trace.__hx_invoke2_o(0.0, ( ( ( haxe.lang.Runtime.toString("i: ") + haxe.lang.Runtime.toString(i1) ) + ", s: " ) + "foo" ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "main"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (14) )) )}));
		//line 16 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		haxe.root.Main.makeBreak("Func with optional param & string addition");
		//line 20 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		haxe.Log.trace.__hx_invoke2_o(0.0, haxe.root.Main.hello(null), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "main"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (20) )) )}));
		//line 21 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		haxe.Log.trace.__hx_invoke2_o(0.0, haxe.root.Main.hello("idiot"), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "main"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (21) )) )}));
		//line 23 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		haxe.root.Main.makeBreak("Loop & print through array");
		//line 25 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		haxe.root.Main.print(((java.lang.Object) (new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{1, 546, 43})) ));
		//line 25 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		java.lang.Object __temp_expr3 = ((java.lang.Object) (null) );
		//line 26 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		haxe.root.Main.print(((java.lang.Object) (new haxe.root.Array<java.lang.String>(new java.lang.String[]{"fghdfg", "fgdfgfddsfsdfdf"})) ));
		//line 26 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		java.lang.Object __temp_expr4 = ((java.lang.Object) (null) );
		//line 28 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		haxe.root.Main.makeBreak("Loop stuff");
		//line 30 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		haxe.root.Main.loops();
		//line 32 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		haxe.root.Main.makeBreak("Nested function");
		//line 34 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		haxe.lang.Function fun = ( (( haxe.root.Main_main_34__Fun.__hx_current != null )) ? (haxe.root.Main_main_34__Fun.__hx_current) : (haxe.root.Main_main_34__Fun.__hx_current = ((haxe.root.Main_main_34__Fun) (new haxe.root.Main_main_34__Fun()) )) );
		//line 36 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		haxe.Log.trace.__hx_invoke2_o(0.0, haxe.lang.Runtime.toString(fun.__hx_invoke0_o()), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "main"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (36) )) )}));
		//line 38 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		haxe.root.Main.makeBreak("Import with alias and random");
		//line 40 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		{
			//line 40 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
			haxe.Log.trace.__hx_invoke2_o(java.lang.Math.random(), haxe.lang.Runtime.undefined, 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "main"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (40) )) )}));
			//line 40 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
			haxe.Log.trace.__hx_invoke2_o(java.lang.Math.random(), haxe.lang.Runtime.undefined, 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "main"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (40) )) )}));
			//line 40 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
			haxe.Log.trace.__hx_invoke2_o(java.lang.Math.random(), haxe.lang.Runtime.undefined, 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "main"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (40) )) )}));
			//line 40 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
			haxe.Log.trace.__hx_invoke2_o(java.lang.Math.random(), haxe.lang.Runtime.undefined, 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "main"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (40) )) )}));
			//line 40 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
			haxe.Log.trace.__hx_invoke2_o(java.lang.Math.random(), haxe.lang.Runtime.undefined, 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "main"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (40) )) )}));
		}
		
		//line 42 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		haxe.root.Main.makeBreak("Types");
		//line 44 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		java.lang.Object type = null;
		//line 44 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		{
			//line 47 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
			java.lang.Object __temp_odecl1 = new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{"i"}, new double[]{((double) (((double) (0) )) )});
			//line 44 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
			type = new haxe.lang.DynamicObject(new java.lang.String[]{"n"}, new java.lang.Object[]{__temp_odecl1}, new java.lang.String[]{"x", "y"}, new double[]{((double) (((double) (1) )) ), ((double) (((double) (2) )) )});
		}
		
		//line 51 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		haxe.Log.trace.__hx_invoke2_o(0.0, type, 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "main"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (51) )) )}));
		//line 53 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		java.lang.Object type1 = null;
		//line 53 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		{
			//line 56 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
			java.lang.Object __temp_odecl2 = new haxe.lang.DynamicObject(new java.lang.String[]{"bool"}, new java.lang.Object[]{true}, new java.lang.String[]{"floatyyy"}, new double[]{((double) (1.0) )});
			//line 53 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
			type1 = new haxe.lang.DynamicObject(new java.lang.String[]{"nested", "some-string"}, new java.lang.Object[]{__temp_odecl2, "lol"}, new java.lang.String[]{"field1"}, new double[]{((double) (((double) (1) )) )});
		}
		
		//line 61 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		haxe.Log.trace.__hx_invoke2_o(0.0, type1, 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "main"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (61) )) )}));
		//line 62 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		haxe.Log.trace.__hx_invoke2_o(0.0, ( "bool from nested = " + haxe.root.Std.string(haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.getField(haxe.lang.Runtime.getField(type1, "nested", true), "bool", true)) ))) ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "main"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (62) )) )}));
	}
	
	
	public static void makeBreak(java.lang.String secName)
	{
		//line 66 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		if (( secName == null )) 
		{
			//line 66 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
			secName = "";
		}
		
		//line 66 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		haxe.Log.trace.__hx_invoke2_o(0.0, ( "------------------------ " + secName ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "makeBreak"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (66) )) )}));
	}
	
	
	public static java.lang.String test(java.lang.Object i, java.lang.String s)
	{
		//line 70 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		return ( ( ( haxe.lang.Runtime.toString("i: ") + haxe.lang.Runtime.toString(i) ) + ", s: " ) + s );
	}
	
	
	public static java.lang.String hello(java.lang.String str)
	{
		//line 74 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		if (( str == null )) 
		{
			//line 74 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
			str = "world";
		}
		
		//line 74 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		return ( "Hello " + str );
	}
	
	
	public static <T> void print(java.lang.Object it)
	{
		//line 78 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		java.lang.Object o = ((java.lang.Object) (haxe.lang.Runtime.callField(it, "iterator", null)) );
		//line 78 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		while (haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.callField(o, "hasNext", null)) )))
		{
			//line 78 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
			T o1 = ((T) (haxe.lang.Runtime.callField(o, "next", null)) );
			//line 78 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
			haxe.Log.trace.__hx_invoke2_o(0.0, o1, 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "print"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (78) )) )}));
		}
		
	}
	
	
	public static void loops()
	{
		//line 82 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		{
			//line 83 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
			haxe.Log.trace.__hx_invoke2_o(0.0, ( "First loop index is " + 0 ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "loops"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (83) )) )}));
			//line 83 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
			haxe.Log.trace.__hx_invoke2_o(0.0, ( "First loop index is " + 1 ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "loops"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (83) )) )}));
			//line 83 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
			haxe.Log.trace.__hx_invoke2_o(0.0, ( "First loop index is " + 2 ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "loops"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (83) )) )}));
			//line 83 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
			haxe.Log.trace.__hx_invoke2_o(0.0, ( "First loop index is " + 3 ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "loops"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (83) )) )}));
			//line 83 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
			haxe.Log.trace.__hx_invoke2_o(0.0, ( "First loop index is " + 4 ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "loops"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (83) )) )}));
		}
		
		//line 85 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
		{
			//line 86 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
			haxe.Log.trace.__hx_invoke2_o(0.0, ( "Second loop value is " + 1 ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "loops"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (86) )) )}));
			//line 86 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
			haxe.Log.trace.__hx_invoke2_o(0.0, ( "Second loop value is " + 4 ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "loops"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (86) )) )}));
			//line 86 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
			haxe.Log.trace.__hx_invoke2_o(0.0, ( "Second loop value is " + 2 ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "loops"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (86) )) )}));
			//line 86 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
			haxe.Log.trace.__hx_invoke2_o(0.0, ( "Second loop value is " + 67 ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "loops"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (86) )) )}));
			//line 86 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\test\\src\\Main.hx"
			haxe.Log.trace.__hx_invoke2_o(0.0, ( "Second loop value is " + 12 ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "loops"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (86) )) )}));
		}
		
	}
	
	
}


