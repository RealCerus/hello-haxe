// Generated by Haxe 4.0.5
package sys;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class FileSystem extends haxe.lang.HxObject
{
	public FileSystem(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public FileSystem()
	{
		//line 29 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\sys\\FileSystem.hx"
		sys.FileSystem.__hx_ctor_sys_FileSystem(this);
	}
	
	
	protected static void __hx_ctor_sys_FileSystem(sys.FileSystem __hx_this)
	{
	}
	
	
	public static boolean isDirectory(java.lang.String path)
	{
		//line 74 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\sys\\FileSystem.hx"
		java.io.File f = new java.io.File(haxe.lang.Runtime.toString(path));
		//line 75 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\sys\\FileSystem.hx"
		if ( ! (f.exists()) ) 
		{
			//line 76 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\sys\\FileSystem.hx"
			throw haxe.lang.HaxeException.wrap(( ( "Path " + path ) + " doesn\'t exist" ));
		}
		
		//line 77 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\sys\\FileSystem.hx"
		return f.isDirectory();
	}
	
	
	public static haxe.root.Array<java.lang.String> readDirectory(java.lang.String path)
	{
		//line 97 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\sys\\FileSystem.hx"
		java.io.File f = new java.io.File(haxe.lang.Runtime.toString(path));
		//line 98 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\sys\\FileSystem.hx"
		if ( ! (f.exists()) ) 
		{
			//line 99 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\sys\\FileSystem.hx"
			throw haxe.lang.HaxeException.wrap(( ( "Path " + path ) + " doesn\'t exist" ));
		}
		
		//line 100 "C:\\HaxeToolkit\\haxe\\std\\java\\_std\\sys\\FileSystem.hx"
		return haxe.java.Lib.array_String(f.list());
	}
	
	
}


