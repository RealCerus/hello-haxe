// Generated by Haxe 4.0.5
package haxe.root;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Main extends haxe.lang.HxObject
{
	public static void main(String[] args)
	{
		Sys._args = args;
		haxe.java.Init.init();
		{
			//line 1 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\?"
			haxe.root.Main.main();
		}
	}
	
	public Main(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Main()
	{
		//line 2 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
		haxe.root.Main.__hx_ctor__Main(this);
	}
	
	
	protected static void __hx_ctor__Main(haxe.root.Main __hx_this)
	{
	}
	
	
	public static void main()
	{
		//line 4 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
		haxe.root.Array<java.lang.String> args = haxe.root.Sys.args();
		//line 5 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
		java.lang.String path = ".";
		//line 7 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
		if (( args.length != 0 )) 
		{
			//line 8 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
			path = args.__get(( args.length - 1 ));
		}
		
		//line 11 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
		if ( ! (sys.FileSystem.isDirectory(path)) ) 
		{
			//line 12 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
			path = ".";
		}
		
		//line 15 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
		haxe.Log.trace.__hx_invoke2_o(0.0, ( ( "Printing files in directory " + path ) + ":" ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "main"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (15) )) )}));
		//line 16 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
		haxe.root.Main.print(null, path);
	}
	
	
	public static void print(java.lang.Object offset, java.lang.String startPath)
	{
		//line 19 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
		if (( startPath == null )) 
		{
			//line 19 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
			startPath = ".";
		}
		
		//line 19 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
		int offset1 = ( (haxe.lang.Runtime.eq(offset, null)) ? (0) : (((int) (haxe.lang.Runtime.toInt(offset)) )) );
		//line 20 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
		haxe.root.StringBuf buf = new haxe.root.StringBuf();
		//line 21 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
		{
			//line 21 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
			int _g = 0;
			//line 21 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
			int _g1 = offset1;
			//line 21 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
			while (( _g < _g1 ))
			{
				//line 21 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
				 ++ _g;
				//line 21 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
				buf.add(haxe.lang.Runtime.toString(" "));
				//line 21 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
				java.lang.Object __temp_expr1 = ((java.lang.Object) (null) );
			}
			
		}
		
		//line 23 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
		{
			//line 23 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
			int _g2 = 0;
			//line 23 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
			haxe.root.Array<java.lang.String> _g3 = sys.FileSystem.readDirectory(startPath);
			//line 23 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
			while (( _g2 < _g3.length ))
			{
				//line 23 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
				java.lang.String path = _g3.__get(_g2);
				//line 23 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
				 ++ _g2;
				//line 24 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
				haxe.Log.trace.__hx_invoke2_o(0.0, ( buf.toString() + path ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "src/Main.hx", "print"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (24) )) )}));
				//line 25 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
				if (( sys.FileSystem.isDirectory(( startPath + path )) || sys.FileSystem.isDirectory(path) )) 
				{
					//line 26 "C:\\Users\\Maximilian\\Desktop\\IntelliJ\\Workspace\\haxe_test\\file-list\\src\\Main.hx"
					haxe.root.Main.print(( offset1 + 3 ), ( (( (sys.FileSystem.isDirectory(( startPath + path ))) ? (( startPath + path )) : (path) )) + "/" ));
				}
				
			}
			
		}
		
	}
	
	
}


